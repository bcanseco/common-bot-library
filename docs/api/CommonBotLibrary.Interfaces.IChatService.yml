### YamlMime:ManagedReference
items:
- uid: CommonBotLibrary.Interfaces.IChatService
  commentId: T:CommonBotLibrary.Interfaces.IChatService
  id: IChatService
  parent: CommonBotLibrary.Interfaces
  children:
  - CommonBotLibrary.Interfaces.IChatService.ConverseAsync(System.String,System.String)
  langs:
  - csharp
  - vb
  name: IChatService
  nameWithType: IChatService
  fullName: CommonBotLibrary.Interfaces.IChatService
  type: Interface
  source:
    id: IChatService
    path: ''
    startLine: 415
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary.Interfaces
  summary: "\nDefines an API for chatting with AIs.\n"
  example: []
  syntax:
    content: public interface IChatService
    content.vb: Public Interface IChatService
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CommonBotLibrary.Interfaces.IChatService.ConverseAsync(System.String,System.String)
  commentId: M:CommonBotLibrary.Interfaces.IChatService.ConverseAsync(System.String,System.String)
  id: ConverseAsync(System.String,System.String)
  parent: CommonBotLibrary.Interfaces.IChatService
  langs:
  - csharp
  - vb
  name: ConverseAsync(String, String)
  nameWithType: IChatService.ConverseAsync(String, String)
  fullName: CommonBotLibrary.Interfaces.IChatService.ConverseAsync(System.String, System.String)
  type: Method
  source:
    id: ConverseAsync
    path: ''
    startLine: 423
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary.Interfaces
  summary: "\nConverses with an AI.\n"
  example: []
  syntax:
    content: Task<> ConverseAsync(string message, string conversationId)
    parameters:
    - id: message
      type: System.String
      description: The message to send.
    - id: conversationId
      type: System.String
      description: The conversation context to send the message in.
    return:
      type: Task{System.}
      description: The AI's response, and the current conversation ID.
    content.vb: Function ConverseAsync(message As String, conversationId As String) As Task(Of )
  overload: CommonBotLibrary.Interfaces.IChatService.ConverseAsync*
references:
- uid: CommonBotLibrary.Interfaces
  commentId: N:CommonBotLibrary.Interfaces
  isExternal: false
  name: CommonBotLibrary.Interfaces
  nameWithType: CommonBotLibrary.Interfaces
  fullName: CommonBotLibrary.Interfaces
- uid: CommonBotLibrary.Interfaces.IChatService.ConverseAsync*
  commentId: Overload:CommonBotLibrary.Interfaces.IChatService.ConverseAsync
  isExternal: false
  name: ConverseAsync
  nameWithType: IChatService.ConverseAsync
  fullName: CommonBotLibrary.Interfaces.IChatService.ConverseAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Task{System.}
  commentId: '!:Task{System.}'
  definition: Task`1
  name: Task<>
  nameWithType: Task<>
  fullName: Task<System.>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of System.)
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.
    name: ''
    nameWithType: ''
    fullName: System.
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.
    name: ''
    nameWithType: ''
    fullName: System.
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
