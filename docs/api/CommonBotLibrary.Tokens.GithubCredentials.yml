### YamlMime:ManagedReference
items:
- uid: CommonBotLibrary.Tokens.GithubCredentials
  commentId: T:CommonBotLibrary.Tokens.GithubCredentials
  id: Tokens.GithubCredentials
  parent: CommonBotLibrary
  children:
  - CommonBotLibrary.Tokens.GithubCredentials.#ctor(System.String,System.String,System.String)
  - CommonBotLibrary.Tokens.GithubCredentials.OAuth
  - CommonBotLibrary.Tokens.GithubCredentials.Repository
  - CommonBotLibrary.Tokens.GithubCredentials.Username
  langs:
  - csharp
  - vb
  name: Tokens.GithubCredentials
  nameWithType: Tokens.GithubCredentials
  fullName: CommonBotLibrary.Tokens.GithubCredentials
  type: Class
  source:
    id: GithubCredentials
    path: ''
    startLine: 26
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary
  syntax:
    content: public class GithubCredentials
    content.vb: Public Class GithubCredentials
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CommonBotLibrary.Tokens.GithubCredentials.#ctor(System.String,System.String,System.String)
  commentId: M:CommonBotLibrary.Tokens.GithubCredentials.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: CommonBotLibrary.Tokens.GithubCredentials
  langs:
  - csharp
  - vb
  name: GithubCredentials(String, String, String)
  nameWithType: Tokens.GithubCredentials.GithubCredentials(String, String, String)
  fullName: CommonBotLibrary.Tokens.GithubCredentials.GithubCredentials(System.String, System.String, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 28
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary
  syntax:
    content: public GithubCredentials(string username, string repository, string oauth)
    parameters:
    - id: username
      type: System.String
    - id: repository
      type: System.String
    - id: oauth
      type: System.String
    content.vb: Public Sub New(username As String, repository As String, oauth As String)
  overload: CommonBotLibrary.Tokens.GithubCredentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CommonBotLibrary.Tokens.GithubCredentials.Username
  commentId: P:CommonBotLibrary.Tokens.GithubCredentials.Username
  id: Username
  parent: CommonBotLibrary.Tokens.GithubCredentials
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: Tokens.GithubCredentials.Username
  fullName: CommonBotLibrary.Tokens.GithubCredentials.Username
  type: Property
  source:
    id: Username
    path: ''
    startLine: 32
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary
  syntax:
    content: public string Username { set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public WriteOnly Property Username As String
  overload: CommonBotLibrary.Tokens.GithubCredentials.Username*
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
- uid: CommonBotLibrary.Tokens.GithubCredentials.Repository
  commentId: P:CommonBotLibrary.Tokens.GithubCredentials.Repository
  id: Repository
  parent: CommonBotLibrary.Tokens.GithubCredentials
  langs:
  - csharp
  - vb
  name: Repository
  nameWithType: Tokens.GithubCredentials.Repository
  fullName: CommonBotLibrary.Tokens.GithubCredentials.Repository
  type: Property
  source:
    id: Repository
    path: ''
    startLine: 33
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary
  syntax:
    content: public string Repository { set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public WriteOnly Property Repository As String
  overload: CommonBotLibrary.Tokens.GithubCredentials.Repository*
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
- uid: CommonBotLibrary.Tokens.GithubCredentials.OAuth
  commentId: P:CommonBotLibrary.Tokens.GithubCredentials.OAuth
  id: OAuth
  parent: CommonBotLibrary.Tokens.GithubCredentials
  langs:
  - csharp
  - vb
  name: OAuth
  nameWithType: Tokens.GithubCredentials.OAuth
  fullName: CommonBotLibrary.Tokens.GithubCredentials.OAuth
  type: Property
  source:
    id: OAuth
    path: ''
    startLine: 34
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary
  syntax:
    content: public string OAuth { set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public WriteOnly Property OAuth As String
  overload: CommonBotLibrary.Tokens.GithubCredentials.OAuth*
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
references:
- uid: CommonBotLibrary
  commentId: N:CommonBotLibrary
  isExternal: false
  name: CommonBotLibrary
  nameWithType: CommonBotLibrary
  fullName: CommonBotLibrary
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CommonBotLibrary.Tokens.GithubCredentials.#ctor*
  commentId: Overload:CommonBotLibrary.Tokens.GithubCredentials.#ctor
  isExternal: false
  name: GithubCredentials
  nameWithType: Tokens.GithubCredentials.GithubCredentials
  fullName: CommonBotLibrary.Tokens.GithubCredentials.GithubCredentials
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CommonBotLibrary.Tokens.GithubCredentials.Username*
  commentId: Overload:CommonBotLibrary.Tokens.GithubCredentials.Username
  isExternal: false
  name: Username
  nameWithType: Tokens.GithubCredentials.Username
  fullName: CommonBotLibrary.Tokens.GithubCredentials.Username
- uid: CommonBotLibrary.Tokens.GithubCredentials.Repository*
  commentId: Overload:CommonBotLibrary.Tokens.GithubCredentials.Repository
  isExternal: false
  name: Repository
  nameWithType: Tokens.GithubCredentials.Repository
  fullName: CommonBotLibrary.Tokens.GithubCredentials.Repository
- uid: CommonBotLibrary.Tokens.GithubCredentials.OAuth*
  commentId: Overload:CommonBotLibrary.Tokens.GithubCredentials.OAuth
  isExternal: false
  name: OAuth
  nameWithType: Tokens.GithubCredentials.OAuth
  fullName: CommonBotLibrary.Tokens.GithubCredentials.OAuth
