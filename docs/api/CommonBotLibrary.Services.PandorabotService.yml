### YamlMime:ManagedReference
items:
- uid: CommonBotLibrary.Services.PandorabotService
  commentId: T:CommonBotLibrary.Services.PandorabotService
  id: PandorabotService
  parent: CommonBotLibrary.Services
  children:
  - CommonBotLibrary.Services.PandorabotService.#ctor(System.String)
  - CommonBotLibrary.Services.PandorabotService.ConverseAsync(System.String,System.String)
  langs:
  - csharp
  - vb
  name: PandorabotService
  nameWithType: PandorabotService
  fullName: CommonBotLibrary.Services.PandorabotService
  type: Class
  source:
    id: PandorabotService
    path: ''
    startLine: 1440
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary.Services
  syntax:
    content: 'public class PandorabotService : IChatService'
    content.vb: >-
      Public Class PandorabotService
          Inherits IChatService
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CommonBotLibrary.Services.PandorabotService.#ctor(System.String)
  commentId: M:CommonBotLibrary.Services.PandorabotService.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: CommonBotLibrary.Services.PandorabotService
  langs:
  - csharp
  - vb
  name: PandorabotService(String)
  nameWithType: PandorabotService.PandorabotService(String)
  fullName: CommonBotLibrary.Services.PandorabotService.PandorabotService(System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1447
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary.Services
  summary: "\nConstructs an <see cref=\"!:IChatService\"></see> implementation that uses Pandorabots.\n"
  example: []
  syntax:
    content: public PandorabotService(string botId = null)
    parameters:
    - id: botId
      type: System.String
      description: Defaults to bot Id in <xref href="CommonBotLibrary.Tokens" data-throw-if-not-resolved="false"></xref> if null.
    content.vb: Public Sub New(botId As String = Nothing)
  overload: CommonBotLibrary.Services.PandorabotService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CommonBotLibrary.Services.PandorabotService.ConverseAsync(System.String,System.String)
  commentId: M:CommonBotLibrary.Services.PandorabotService.ConverseAsync(System.String,System.String)
  id: ConverseAsync(System.String,System.String)
  parent: CommonBotLibrary.Services.PandorabotService
  langs:
  - csharp
  - vb
  name: ConverseAsync(String, String)
  nameWithType: PandorabotService.ConverseAsync(String, String)
  fullName: CommonBotLibrary.Services.PandorabotService.ConverseAsync(System.String, System.String)
  type: Method
  source:
    id: ConverseAsync
    path: ''
    startLine: 1473
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary.Services
  summary: "\nUses pandorabots.com to communicate with an AI.\n"
  example: []
  syntax:
    content: public Task<> ConverseAsync(string message, string customerId = null)
    parameters:
    - id: message
      type: System.String
      description: The message to send.
    - id: customerId
      type: System.String
      description: A unique identifier for the current conversation.
    return:
      type: Task{System.}
      description: The AI's response, and the current conversation ID.
    content.vb: Public Function ConverseAsync(message As String, customerId As String = Nothing) As Task(Of )
  overload: CommonBotLibrary.Services.PandorabotService.ConverseAsync*
  seealso:
  - linkType: HRef
    linkId: https://pandorabots.com/static/html/Legal/
    altText: TOS
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CommonBotLibrary.Services
  commentId: N:CommonBotLibrary.Services
  isExternal: false
  name: CommonBotLibrary.Services
  nameWithType: CommonBotLibrary.Services
  fullName: CommonBotLibrary.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CommonBotLibrary.Tokens
  commentId: T:CommonBotLibrary.Tokens
  isExternal: false
  name: Tokens
  nameWithType: Tokens
  fullName: CommonBotLibrary.Tokens
- uid: CommonBotLibrary.Services.PandorabotService.#ctor*
  commentId: Overload:CommonBotLibrary.Services.PandorabotService.#ctor
  isExternal: false
  name: PandorabotService
  nameWithType: PandorabotService.PandorabotService
  fullName: CommonBotLibrary.Services.PandorabotService.PandorabotService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CommonBotLibrary.Services.PandorabotService.ConverseAsync*
  commentId: Overload:CommonBotLibrary.Services.PandorabotService.ConverseAsync
  isExternal: false
  name: ConverseAsync
  nameWithType: PandorabotService.ConverseAsync
  fullName: CommonBotLibrary.Services.PandorabotService.ConverseAsync
- uid: Task{System.}
  commentId: '!:Task{System.}'
  definition: Task`1
  name: Task<>
  nameWithType: Task<>
  fullName: Task<System.>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of System.)
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.
    name: ''
    nameWithType: ''
    fullName: System.
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.
    name: ''
    nameWithType: ''
    fullName: System.
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
