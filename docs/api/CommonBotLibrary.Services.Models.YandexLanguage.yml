### YamlMime:ManagedReference
items:
- uid: CommonBotLibrary.Services.Models.YandexLanguage
  commentId: T:CommonBotLibrary.Services.Models.YandexLanguage
  id: YandexLanguage
  parent: CommonBotLibrary.Services.Models
  children:
  - CommonBotLibrary.Services.Models.YandexLanguage.#ctor(System.String)
  - CommonBotLibrary.Services.Models.YandexLanguage.Code
  - CommonBotLibrary.Services.Models.YandexLanguage.LanguageCodes
  - CommonBotLibrary.Services.Models.YandexLanguage.Name
  - CommonBotLibrary.Services.Models.YandexLanguage.ToString
  langs:
  - csharp
  - vb
  name: YandexLanguage
  nameWithType: YandexLanguage
  fullName: CommonBotLibrary.Services.Models.YandexLanguage
  type: Class
  source:
    id: YandexLanguage
    path: ''
    startLine: 2842
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary.Services.Models
  syntax:
    content: public class YandexLanguage
    content.vb: Public Class YandexLanguage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CommonBotLibrary.Services.Models.YandexLanguage.#ctor(System.String)
  commentId: M:CommonBotLibrary.Services.Models.YandexLanguage.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: CommonBotLibrary.Services.Models.YandexLanguage
  langs:
  - csharp
  - vb
  name: YandexLanguage(String)
  nameWithType: YandexLanguage.YandexLanguage(String)
  fullName: CommonBotLibrary.Services.Models.YandexLanguage.YandexLanguage(System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2852
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary.Services.Models
  summary: "\nA model wrapping a language supported by Yandex Translate.\n"
  example: []
  syntax:
    content: public YandexLanguage(string input)
    parameters:
    - id: input
      type: System.String
      description: A language name or code.
    content.vb: Public Sub New(input As String)
  overload: CommonBotLibrary.Services.Models.YandexLanguage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CommonBotLibrary.Services.Models.YandexLanguage.Name
  commentId: P:CommonBotLibrary.Services.Models.YandexLanguage.Name
  id: Name
  parent: CommonBotLibrary.Services.Models.YandexLanguage
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: YandexLanguage.Name
  fullName: CommonBotLibrary.Services.Models.YandexLanguage.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 2872
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary.Services.Models
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: CommonBotLibrary.Services.Models.YandexLanguage.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CommonBotLibrary.Services.Models.YandexLanguage.Code
  commentId: P:CommonBotLibrary.Services.Models.YandexLanguage.Code
  id: Code
  parent: CommonBotLibrary.Services.Models.YandexLanguage
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: YandexLanguage.Code
  fullName: CommonBotLibrary.Services.Models.YandexLanguage.Code
  type: Property
  source:
    id: Code
    path: ''
    startLine: 2873
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary.Services.Models
  syntax:
    content: public string Code { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Code As String
  overload: CommonBotLibrary.Services.Models.YandexLanguage.Code*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CommonBotLibrary.Services.Models.YandexLanguage.ToString
  commentId: M:CommonBotLibrary.Services.Models.YandexLanguage.ToString
  id: ToString
  parent: CommonBotLibrary.Services.Models.YandexLanguage
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: YandexLanguage.ToString()
  fullName: CommonBotLibrary.Services.Models.YandexLanguage.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 2875
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary.Services.Models
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: CommonBotLibrary.Services.Models.YandexLanguage.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CommonBotLibrary.Services.Models.YandexLanguage.LanguageCodes
  commentId: P:CommonBotLibrary.Services.Models.YandexLanguage.LanguageCodes
  id: LanguageCodes
  parent: CommonBotLibrary.Services.Models.YandexLanguage
  langs:
  - csharp
  - vb
  name: LanguageCodes
  nameWithType: YandexLanguage.LanguageCodes
  fullName: CommonBotLibrary.Services.Models.YandexLanguage.LanguageCodes
  type: Property
  source:
    id: LanguageCodes
    path: ''
    startLine: 2878
  assemblies:
  - cs.temp.dll
  namespace: CommonBotLibrary.Services.Models
  syntax:
    content: public static IDictionary<string, string> LanguageCodes { get; }
    parameters: []
    return:
      type: IDictionary{System.String,System.String}
    content.vb: Public Shared ReadOnly Property LanguageCodes As IDictionary(Of String, String)
  overload: CommonBotLibrary.Services.Models.YandexLanguage.LanguageCodes*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: CommonBotLibrary.Services.Models
  commentId: N:CommonBotLibrary.Services.Models
  isExternal: false
  name: CommonBotLibrary.Services.Models
  nameWithType: CommonBotLibrary.Services.Models
  fullName: CommonBotLibrary.Services.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CommonBotLibrary.Services.Models.YandexLanguage.#ctor*
  commentId: Overload:CommonBotLibrary.Services.Models.YandexLanguage.#ctor
  isExternal: false
  name: YandexLanguage
  nameWithType: YandexLanguage.YandexLanguage
  fullName: CommonBotLibrary.Services.Models.YandexLanguage.YandexLanguage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CommonBotLibrary.Services.Models.YandexLanguage.Name*
  commentId: Overload:CommonBotLibrary.Services.Models.YandexLanguage.Name
  isExternal: false
  name: Name
  nameWithType: YandexLanguage.Name
  fullName: CommonBotLibrary.Services.Models.YandexLanguage.Name
- uid: CommonBotLibrary.Services.Models.YandexLanguage.Code*
  commentId: Overload:CommonBotLibrary.Services.Models.YandexLanguage.Code
  isExternal: false
  name: Code
  nameWithType: YandexLanguage.Code
  fullName: CommonBotLibrary.Services.Models.YandexLanguage.Code
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CommonBotLibrary.Services.Models.YandexLanguage.ToString*
  commentId: Overload:CommonBotLibrary.Services.Models.YandexLanguage.ToString
  isExternal: false
  name: ToString
  nameWithType: YandexLanguage.ToString
  fullName: CommonBotLibrary.Services.Models.YandexLanguage.ToString
- uid: CommonBotLibrary.Services.Models.YandexLanguage.LanguageCodes*
  commentId: Overload:CommonBotLibrary.Services.Models.YandexLanguage.LanguageCodes
  isExternal: false
  name: LanguageCodes
  nameWithType: YandexLanguage.LanguageCodes
  fullName: CommonBotLibrary.Services.Models.YandexLanguage.LanguageCodes
- uid: IDictionary{System.String,System.String}
  commentId: '!:IDictionary{System.String,System.String}'
  definition: IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
